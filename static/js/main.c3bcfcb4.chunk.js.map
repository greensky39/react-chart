{"version":3,"sources":["component/SetTableData.jsx","pagination/Posts.jsx","component/Select.jsx","chart/LineChart.jsx","chart/BarChart.jsx","chart/PieChart.jsx","chart/BarChart2.jsx","chart/LineChart2.jsx","chart/PieChart2.jsx","Chart.jsx","pagination/BoardPage.jsx","pagination/Board.jsx","api/Axiosdata.jsx","App.js","reportWebVitals.js","index.js"],"names":["SetTableData","GetJsonData","useState","size","page","inputs","setInputs","inputValue","e","target","name","value","type","placeholder","onChange","onClick","TableLine","css","Posts","posts","loading","map","i","data","row","country_region_code","country_region","region","placeId","date","symptom_abdominal_obesityi","Select","onChangeHandler","preventDefault","console","log","selected","disabled","v","undefined","key","LineChart","selectedColumn","chartDomRef","React","useRef","useEffect","myChart","echarts","current","option","xAxis","xAxisColumn","yAxis","series","yAxisColumn","setOption","className","id","ref","style","width","height","BarChart","PieChart","optProps","radius","BarChart2","options","showBackground","backgroundStyle","color","LineChart2","PieChart2","title","text","subtext","left","tooltip","trigger","legend","orient","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","chartStyle","defChartType","Chart","columns","chartType","setChartType","setSelectedColumn","setSelectedColumnHandler","idx","selectedIndex","_","accessor","Header","Paging","PageBtn","On","BoardPage","props","pageNumbers","totalPages","Math","ceil","totalPosts","postsPerPage","push","blockNum","setBlockNum","Number","pageLimit","pArr","n","iArr","Array","createArr","maxPage","slice","btnArr","currentPage","paginate","Board","indexOfFirst","arrData","this","serverData","result","totalPage","totalCount","Axiosdata","setPosts","error","setError","setLoading","setCurrentPage","a","axios","get","response","indexOfLast","length","tmp","currentPosts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3bcfcb4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction SetTableData({ GetJsonData }) {\r\n  const [inputs, setInputs] = useState({\r\n    size: \"\",\r\n    page: \"\",\r\n  });\r\n  // const nameInput = useRef();\r\n  let { size, page } = inputs;\r\n\r\n  const inputValue = (e) => {\r\n    // const { value, Size } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      // [Size]: value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const setData = () => {\r\n    size = inputs.size;\r\n    page = inputs.page;\r\n    GetJsonData(size, page);\r\n  };\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div>\r\n          <b>data 설정</b>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Size\"\r\n              onChange={inputValue}\r\n              value={inputs.size}\r\n              name=\"size\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Page\"\r\n              onChange={inputValue}\r\n              value={inputs.page}\r\n              name=\"page\"\r\n            ></input>\r\n            <button onClick={setData}>테이블 만들기</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetTableData;\r\n","import React, { useState } from \"react\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport SetTableData2 from \"../component/SetTableData\";\r\n\r\nconst TableLine = css`\r\n  border-style: double;\r\n  border-width: 2px;\r\n  border-color: black;\r\n  text-align: center;\r\n`;\r\n\r\nconst Posts = ({ posts, loading }) => {\r\n  const headerMeta = [\r\n    \"row\",\r\n    \"country_region_code\",\r\n    \"country_region\",\r\n    \"region\",\r\n    \"placeId\",\r\n    \"date\",\r\n    \"symptom_abdominal_obesityi\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {loading && <div> loading... </div>}\r\n      {/* <ul>\r\n        {posts.map((post) => (\r\n          <td key={post.row}>{post.country_region_code}</li>\r\n        ))}\r\n      </ul> */}\r\n      {/* <button onClick={CreateTable}>click</button> */}\r\n      <div>\r\n        <div>\r\n          <p>\r\n            <b>Table</b>\r\n          </p>\r\n        </div>\r\n        <table css={TableLine}>\r\n          <thead>\r\n            <tr>\r\n              {headerMeta.map((i) => (\r\n                <th key={i}>{i}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map((data) => (\r\n              <tr>\r\n                <td key={data.row}>{data.row}</td>\r\n                <td>{data.country_region_code}</td>\r\n                <td>{data.country_region}</td>\r\n                <td>{data.region ? null : \"null\"}</td>\r\n                <td>{data.placeId}</td>\r\n                <td>{data.date}</td>\r\n                <td>{data.symptom_abdominal_obesityi}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {/* <SetTableData2 /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\n// [{value: '', name: '', key: '', ....}, ....]\r\nexport default function Select({ name, data, onChangeHandler }) {\r\n  return (\r\n    <>\r\n      <select\r\n        name={name}\r\n        onChange={(e) => {\r\n          e.preventDefault();\r\n          // blah blah\r\n          if (onChangeHandler) {\r\n            onChangeHandler(e);\r\n          }\r\n          console.log(\"e :\", e);\r\n        }}\r\n      >\r\n        <option selected disabled>\r\n          선택\r\n        </option>\r\n        {data.map((v, i) => (\r\n          <option key={`${v.key === undefined ? i : v.key}`} value={v.value}>\r\n            {v.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default function LineChart({ data, selectedColumn }) {\r\n  const chartDomRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    let myChart = echarts.init(chartDomRef.current);\r\n    const option = {\r\n      xAxis: {\r\n        data: data.map((v) => v[selectedColumn.xAxisColumn]),\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: data.map((v) => v[selectedColumn.yAxisColumn]),\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    selectedColumn.xAxis !== \"\" &&\r\n      selectedColumn.yAxis !== \"\" &&\r\n      myChart.setOption(option);\r\n  }, [data, selectedColumn]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"echart\"\r\n        id=\"main\"\r\n        ref={chartDomRef}\r\n        style={{ width: \"800px\", height: \"500px\" }}\r\n      ></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default function BarChart({ data, selectedColumn }) {\r\n  const chartDomRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    console.log(data, selectedColumn);\r\n    let myChart = echarts.init(chartDomRef.current);\r\n    const option = {\r\n      xAxis: {\r\n        data: data.map((v) => v[selectedColumn.xAxisColumn]),\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: data.map((v) => v[selectedColumn.yAxisColumn]),\r\n          type: \"bar\",\r\n        },\r\n      ],\r\n    };\r\n    selectedColumn.xAxis !== \"\" &&\r\n      selectedColumn.yAxis !== \"\" &&\r\n      myChart.setOption(option);\r\n  }, [data, selectedColumn]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"echart\"\r\n        id=\"main\"\r\n        ref={chartDomRef}\r\n        style={{ width: \"800px\", height: \"500px\" }}\r\n      ></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default function PieChart({ data, selectedColumn, optProps }) {\r\n  const chartDomRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    console.log(data, selectedColumn);\r\n    let myChart = echarts.init(chartDomRef.current);\r\n    const option = {\r\n      series: [\r\n        {\r\n          name: optProps?.name,\r\n          radius: \"50%\",\r\n          data: data.map((v) => ({\r\n            value: v[selectedColumn.yAxisColumn],\r\n            name: v[selectedColumn.xAxisColumn],\r\n          })),\r\n          type: \"pie\",\r\n        },\r\n      ],\r\n    };\r\n    selectedColumn.xAxis !== \"\" &&\r\n      selectedColumn.yAxis !== \"\" &&\r\n      myChart.setOption(option);\r\n  }, [data, selectedColumn, optProps]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"echart\"\r\n        id=\"main\"\r\n        ref={chartDomRef}\r\n        style={{ width: \"800px\", height: \"500px\" }}\r\n      ></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nfunction BarChart2({ data, selectedColumn }) {\r\n  const options = {\r\n    xAxis: {\r\n      data: data.map((v) => v[selectedColumn.xAxisColumn]),\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        data: data.map((v) => v[selectedColumn.yAxisColumn]),\r\n        type: \"bar\",\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n          color: \"rgba(180, 180, 180, 0.2)\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <ReactECharts option={options} style={{ height: \"500px\", width: \"100%\" }} />\r\n  );\r\n}\r\n\r\nexport default BarChart2;\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nfunction LineChart2({ data, selectedColumn }) {\r\n  const options = {\r\n    xAxis: {\r\n      data: data.map((v) => v[selectedColumn.xAxisColumn]),\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        data: data.map((v) => v[selectedColumn.yAxisColumn]),\r\n        type: \"line\",\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n          color: \"rgba(180, 180, 180, 0.2)\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <ReactECharts option={options} style={{ height: \"500px\", width: \"100%\" }} />\r\n  );\r\n}\r\n\r\nexport default LineChart2;\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nfunction PieChart2({ data, selectedColumn, optProps }) {\r\n  const options = {\r\n    title: {\r\n      text: \"piechart\",\r\n      subtext: \"chart\",\r\n      left: \"center\",\r\n    },\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n    legend: {\r\n      orient: \"vertical\",\r\n      left: \"left\",\r\n    },\r\n    series: [\r\n      {\r\n        name: optProps?.name,\r\n        radius: \"50%\",\r\n        data: data.map((v) => ({\r\n          value: v[selectedColumn.yAxisColumn],\r\n          name: v[selectedColumn.xAxisColumn],\r\n        })),\r\n        type: \"pie\",\r\n        emphasis: {\r\n          itemStyle: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <ReactECharts option={options} style={{ height: \"500px\", width: \"100%\" }} />\r\n  );\r\n}\r\n\r\nexport default PieChart2;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"./component/Select\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport LineChart from \"./chart/LineChart.jsx\";\r\nimport BarChart from \"./chart/BarChart.jsx\";\r\nimport PieChart from \"./chart/PieChart.jsx\";\r\nimport BarChart2 from \"./chart/BarChart2\";\r\nimport LineChart2 from \"./chart/LineChart2\";\r\nimport PieChart2 from \"./chart/PieChart2\";\r\n\r\nconst chartStyle = css`\r\n  margin-left: 100px;\r\n  width: 50%;\r\n  height: 50%;\r\n`;\r\n\r\nconst defChartType = [\r\n  // { value: \"select\", name: \"선택\" },\r\n  { value: \"line\", name: \"라인 차트\" },\r\n  { value: \"bar\", name: \"바 차트\" },\r\n  { value: \"pie\", name: \"파이 차트\" },\r\n  { value: \"line2\", name: \"라인 차트2\" },\r\n  { value: \"bar2\", name: \"바 차트2\" },\r\n  { value: \"pie2\", name: \"파이 차트2\" },\r\n];\r\n\r\nexport default function Chart({ columns, data }) {\r\n  const [chartType, setChartType] = useState(defChartType[0]);\r\n  const [selectedColumn, setSelectedColumn] = useState({\r\n    xAxisColumn: \"\",\r\n    yAxisColumn: \"\",\r\n  });\r\n\r\n  const setChartTypeHandler = (e) => {\r\n    console.log(defChartType[e.target.options.selectedIndex]);\r\n    setChartType(defChartType[e.target.options.selectedIndex - 1]);\r\n  };\r\n\r\n  const setSelectedColumnHandler = (e) => {\r\n    const idx = e.target.options.selectedIndex - 1;\r\n    console.log(idx);\r\n    setSelectedColumn((_) => {\r\n      console.log(e.target.name);\r\n      console.log({\r\n        ...selectedColumn,\r\n        [e.target.name]: columns[idx].accessor,\r\n      });\r\n      return {\r\n        ...selectedColumn,\r\n        [e.target.name]: columns[idx].accessor,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <span>Select Chart Type:</span>\r\n          <Select\r\n            name=\"chartType\"\r\n            data={defChartType}\r\n            onChangeHandler={setChartTypeHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Select X Axis:</span>\r\n          <Select\r\n            name=\"xAxisColumn\"\r\n            data={columns.map((v) => ({ value: v.accessor, name: v.Header }))}\r\n            onChangeHandler={setSelectedColumnHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Select Y Axis:</span>\r\n          <Select\r\n            name=\"yAxisColumn\"\r\n            data={columns.map((v) => ({ value: v.accessor, name: v.Header }))}\r\n            onChangeHandler={setSelectedColumnHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div css={chartStyle}>\r\n        {chartType.value === \"line\" && (\r\n          <LineChart data={data} selectedColumn={selectedColumn} />\r\n        )}\r\n        {chartType.value === \"bar\" && (\r\n          <BarChart data={data} selectedColumn={selectedColumn} />\r\n        )}\r\n        {chartType.value === \"pie\" && (\r\n          <PieChart\r\n            data={data}\r\n            selectedColumn={selectedColumn}\r\n            optProps={{ name: \"It's Pie\" }}\r\n          />\r\n        )}\r\n        {chartType.value === \"line2\" && (\r\n          <LineChart2 data={data} selectedColumn={selectedColumn} />\r\n        )}\r\n        {chartType.value === \"bar2\" && (\r\n          <BarChart2 data={data} selectedColumn={selectedColumn} />\r\n        )}\r\n\r\n        {chartType.value === \"pie2\" && (\r\n          <PieChart2\r\n            data={data}\r\n            selectedColumn={selectedColumn}\r\n            optProps={{ name: \"It's Pie\" }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport SetTableData from \"../component/SetTableData\";\r\n\r\nconst Paging = css`\r\n  margin-top: 12px;\r\n  text-align: center;\r\n`;\r\nconst PageBtn = css`\r\n  height: 34px;\r\n  border: 1px solid #d5d5d5;\r\n  border-radius: 6px;\r\n  padding: 0 12px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  &:hover {\r\n    color: green;\r\n  }\r\n  &:active {\r\n    color: pink;\r\n  }\r\n  &:focus {\r\n    color: #f10c0c;\r\n  }\r\n`;\r\nconst On = css`\r\n  color: #f10c0c;\r\n`;\r\n\r\nconst createArr = (n) => {\r\n  const iArr = new Array(n);\r\n  for (var i = 0; i < n; i++) iArr[i] = i + 1;\r\n  return iArr;\r\n};\r\n/*\r\n  maxPage,\r\n  pageLimit,\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  */\r\nfunction BoardPage(props) {\r\n  const pageNumbers = [];\r\n  // Math.ceil(totalPosts / postsPerPage) => totalPage (총 페이지수)\r\n  const totalPages = Math.ceil(props.totalPosts / props.postsPerPage);\r\n  for (let i = 1; i <= Math.ceil(props.totalPosts / props.postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const [blockNum, setBlockNum] = useState(0);\r\n  // const [currPage, setCurrPage] = useState(1);\r\n\r\n  const v = Number(blockNum * props.pageLimit);\r\n  const iArr = createArr(Number(props.maxPage));\r\n  let pArr = iArr.slice(v, Number(props.pageLimit) + v);\r\n\r\n  const firstPage = () => {\r\n    props.paginate(1);\r\n    setBlockNum(0);\r\n  };\r\n  const lastPage = () => {\r\n    setBlockNum(Math.ceil(props.maxPage / props.pageLimit) - 1);\r\n    props.paginate(totalPages);\r\n  };\r\n  const prevPage = () => {\r\n    if (props.currentPage <= 1) {\r\n      return;\r\n    }\r\n    if (props.currentPage - 1 <= props.pageLimit * blockNum) {\r\n      setBlockNum((n) => n - 1);\r\n    }\r\n    // setCurrPage((n) => n - 1);\r\n    props.paginate(\r\n      props.currentPage - 1 >= 1\r\n        ? props.currentPage - 1\r\n        : (props.currentPage = 1)\r\n    );\r\n  };\r\n  const nextPage = () => {\r\n    if (\r\n      props.pageLimit * Number(blockNum + 1) <\r\n      Number(props.currentPage + 1)\r\n    ) {\r\n      setBlockNum((n) => n + 1);\r\n    }\r\n    props.paginate(\r\n      props.currentPage + 1 < totalPages\r\n        ? props.currentPage + 1\r\n        : (props.currentPage = totalPages)\r\n    );\r\n  };\r\n  const btnArr = [\"<<\", \"<\", \">\", \">>\"];\r\n\r\n  return (\r\n    <>\r\n      <div css={Paging}>\r\n        <h3>\r\n          현재페이지 : <span css={On}>{props.currentPage}</span>\r\n        </h3>\r\n        {/* <h2>blockNum : {blockNum}</h2> */}\r\n        <button css={PageBtn} onClick={firstPage}>\r\n          {btnArr[0]}\r\n        </button>\r\n        <button css={PageBtn} onClick={prevPage}>\r\n          {btnArr[1]}\r\n        </button>\r\n\r\n        <span className=\"number\">\r\n          {pArr.map((n) => (\r\n            <button key={n} css={PageBtn} onClick={() => props.paginate(n)}>\r\n              {n === props.currentPage ? (\r\n                <span css={On}>{n}</span>\r\n              ) : (\r\n                <span>{n}</span>\r\n              )}\r\n            </button>\r\n          ))}\r\n        </span>\r\n        <button css={PageBtn} onClick={nextPage}>\r\n          {btnArr[2]}\r\n        </button>\r\n        <button css={PageBtn} onClick={lastPage}>\r\n          {btnArr[3]}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardPage;\r\n","import React from \"react\";\r\nimport BoardPage from \"./BoardPage\";\r\n\r\nfunction Board({\r\n  maxPage,\r\n  pageLimit,\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  indexOfFirst,\r\n  currentPage,\r\n}) {\r\n  return (\r\n    <>\r\n      <BoardPage\r\n        maxPage={maxPage}\r\n        pageLimit={pageLimit}\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={totalPosts}\r\n        paginate={paginate}\r\n        indexOfFirst={indexOfFirst}\r\n        currentPage={currentPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SetTableData from \"../component/SetTableData\";\r\nimport Posts from \"../pagination/Posts\";\r\nimport Chart from \"../Chart\";\r\nimport Board from \"../pagination/Board\";\r\n\r\nclass ArrData {\r\n  constructor() {\r\n    this.serverData = [];\r\n    this.result = [];\r\n    this.totalPage = \"\";\r\n    this.totalCount = \"\";\r\n    this.row = [];\r\n    this.country_region_code = [];\r\n    this.country_region = [];\r\n    this.region = [];\r\n    this.placeId = [];\r\n    this.date = [];\r\n    this.symptom_abdominal_obesityi = [];\r\n  }\r\n}\r\nconst arrData = new ArrData();\r\n\r\nfunction Axiosdata() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(30); // postPerPage = 20\r\n\r\n  const data = arrData.result;\r\n  const columns = [\r\n    {\r\n      accessor: \"row\",\r\n      Header: \"row\",\r\n    },\r\n    {\r\n      accessor: \"country_region_code\",\r\n      Header: \"country_region_code\",\r\n    },\r\n    {\r\n      accessor: \"country_region\",\r\n      Header: \"country_region\",\r\n    },\r\n    {\r\n      accessor: \"region\",\r\n      Header: \"region\",\r\n    },\r\n    {\r\n      accessor: \"placeId\",\r\n      Header: \"placeId\",\r\n    },\r\n    {\r\n      accessor: \"date\",\r\n      Header: \"date\",\r\n    },\r\n    {\r\n      accessor: \"symptom_abdominal_obesityi\",\r\n      Header: \"symptom_abdominal_obesityi\",\r\n    },\r\n  ];\r\n  // const columns = React.useMemo(\r\n  //   () => [\r\n  //     {\r\n  //       accessor: \"row\",\r\n  //       Header: \"row\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"country_region_code\",\r\n  //       Header: \"country_region_code\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"country_region\",\r\n  //       Header: \"country_region\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"region\",\r\n  //       Header: \"region\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"placeId\",\r\n  //       Header: \"placeId\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"date\",\r\n  //       Header: \"date\",\r\n  //     },\r\n  //     {\r\n  //       accessor: \"symptom_abdominal_obesityi\",\r\n  //       Header: \"symptom_abdominal_obesityi\",\r\n  //     },\r\n  //   ],\r\n  //   []\r\n  // );\r\n\r\n  async function GetJsonData(size, page) {\r\n    try {\r\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\r\n      setError(null);\r\n      setPosts(null);\r\n      // loading 상태를 true 로 바꿉니다.\r\n      setLoading(true);\r\n\r\n      const response = await axios.get(\r\n        `http://localhost:8000/data?size=${size}&page=${page}`\r\n        // `http://localhost:8000/data?size=1000&page=1`\r\n      );\r\n      setPosts(response.data.result); // 데이터는 response.data 안에 들어있다.\r\n\r\n      arrData.maxPage = Math.ceil;\r\n      arrData.serverData = response.data;\r\n      arrData.result = response.data.result;\r\n      arrData.totalCount = response.data.totalCount;\r\n      arrData.totalPage = response.data.totalPage;\r\n\r\n      response.data.result.map((data) => arrData.row.push(data.row));\r\n      response.data.result.map((data) =>\r\n        arrData.country_region_code.push(data.country_region_code)\r\n      );\r\n      response.data.result.map((data) =>\r\n        arrData.country_region.push(data.country_region)\r\n      );\r\n      response.data.result.map((data) => arrData.region.push(data.region));\r\n      response.data.result.map((data) => arrData.placeId.push(data.placeId));\r\n      response.data.result.map((data) => arrData.date.push(data.date));\r\n      response.data.result.map((data) =>\r\n        arrData.symptom_abdominal_obesityi.push(data.symptom_abdominal_obesityi)\r\n      );\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetJsonData(1000, 1);\r\n  }, []);\r\n\r\n  console.log(\"arrData.totalCount :\", arrData.totalCount);\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!posts) return null;\r\n\r\n  const indexOfLast = currentPage * postsPerPage;\r\n  const indexOfFirst = indexOfLast - postsPerPage;\r\n\r\n  function currentPosts(tmp) {\r\n    let currentPosts = 0;\r\n    currentPosts = tmp.slice(indexOfFirst, indexOfLast);\r\n    console.log(\"currentPage:\", currentPage);\r\n\r\n    return currentPosts;\r\n  }\r\n\r\n  console.log(\"currentPage :\", currentPage);\r\n\r\n  const totalPosts = posts.length;\r\n  // Math.ceil(totalPosts / postsPerPage) => totalPage (총 페이지수)\r\n  const totalPage = Math.ceil(totalPosts / postsPerPage);\r\n  return (\r\n    <>\r\n      <div className=\"DataPage\">\r\n        <div>\r\n          <Posts posts={currentPosts(posts)} loading={loading}></Posts>\r\n        </div>\r\n\r\n        <div>\r\n          <Board\r\n            maxPage={totalPage}\r\n            pageLimit=\"10\"\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={posts.length}\r\n            paginate={setCurrentPage}\r\n            indexOfFirst={indexOfFirst}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n        <div>\r\n          <SetTableData GetJsonData={GetJsonData} />\r\n        </div>\r\n        <div>\r\n          <Chart columns={columns} data={data} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Axiosdata;\r\n","import React from \"react\";\nimport Axiosdata from \"./api/Axiosdata\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <div>\n          <h3>React</h3>\n        </div>\n        <p>\n          <Axiosdata />\n        </p>\n        <p>{/* <Chart columns={columns} data={data} /> */}</p>\n        <p>{/* <UserInfoTable columns={columns} data={data} /> */}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}